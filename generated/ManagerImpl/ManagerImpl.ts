// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DAODeployed extends ethereum.Event {
  get params(): DAODeployed__Params {
    return new DAODeployed__Params(this);
  }
}

export class DAODeployed__Params {
  _event: DAODeployed;

  constructor(event: DAODeployed) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get metadata(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get auction(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get treasury(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get governor(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnerCanceled extends ethereum.Event {
  get params(): OwnerCanceled__Params {
    return new OwnerCanceled__Params(this);
  }
}

export class OwnerCanceled__Params {
  _event: OwnerCanceled;

  constructor(event: OwnerCanceled) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get canceledOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnerPending extends ethereum.Event {
  get params(): OwnerPending__Params {
    return new OwnerPending__Params(this);
  }
}

export class OwnerPending__Params {
  _event: OwnerPending;

  constructor(event: OwnerPending) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pendingOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnerUpdated extends ethereum.Event {
  get params(): OwnerUpdated__Params {
    return new OwnerUpdated__Params(this);
  }
}

export class OwnerUpdated__Params {
  _event: OwnerUpdated;

  constructor(event: OwnerUpdated) {
    this._event = event;
  }

  get prevOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UpgradeRegistered extends ethereum.Event {
  get params(): UpgradeRegistered__Params {
    return new UpgradeRegistered__Params(this);
  }
}

export class UpgradeRegistered__Params {
  _event: UpgradeRegistered;

  constructor(event: UpgradeRegistered) {
    this._event = event;
  }

  get baseImpl(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get upgradeImpl(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UpgradeRemoved extends ethereum.Event {
  get params(): UpgradeRemoved__Params {
    return new UpgradeRemoved__Params(this);
  }
}

export class UpgradeRemoved__Params {
  _event: UpgradeRemoved;

  constructor(event: UpgradeRemoved) {
    this._event = event;
  }

  get baseImpl(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get upgradeImpl(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get impl(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ManagerImpl__deployResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: Address;
  value4: Address;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: Address,
    value4: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    return map;
  }

  getToken(): Address {
    return this.value0;
  }

  getMetadata(): Address {
    return this.value1;
  }

  getAuction(): Address {
    return this.value2;
  }

  getTreasury(): Address {
    return this.value3;
  }

  getGovernor(): Address {
    return this.value4;
  }
}

export class ManagerImpl__deployInput_founderParamsStruct extends ethereum.Tuple {
  get wallet(): Address {
    return this[0].toAddress();
  }

  get ownershipPct(): BigInt {
    return this[1].toBigInt();
  }

  get vestExpiry(): BigInt {
    return this[2].toBigInt();
  }
}

export class ManagerImpl__deployInput_tokenParamsStruct extends ethereum.Tuple {
  get initStrings(): Bytes {
    return this[0].toBytes();
  }
}

export class ManagerImpl__deployInput_auctionParamsStruct extends ethereum.Tuple {
  get reservePrice(): BigInt {
    return this[0].toBigInt();
  }

  get duration(): BigInt {
    return this[1].toBigInt();
  }
}

export class ManagerImpl__deployInput_govParamsStruct extends ethereum.Tuple {
  get timelockDelay(): BigInt {
    return this[0].toBigInt();
  }

  get votingDelay(): BigInt {
    return this[1].toBigInt();
  }

  get votingPeriod(): BigInt {
    return this[2].toBigInt();
  }

  get proposalThresholdBps(): BigInt {
    return this[3].toBigInt();
  }

  get quorumThresholdBps(): BigInt {
    return this[4].toBigInt();
  }

  get vetoer(): Address {
    return this[5].toAddress();
  }
}

export class ManagerImpl__getAddressesResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: Address;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    return map;
  }

  getMetadata(): Address {
    return this.value0;
  }

  getAuction(): Address {
    return this.value1;
  }

  getTreasury(): Address {
    return this.value2;
  }

  getGovernor(): Address {
    return this.value3;
  }
}

export class ManagerImpl extends ethereum.SmartContract {
  static bind(address: Address): ManagerImpl {
    return new ManagerImpl("ManagerImpl", address);
  }

  auctionImpl(): Address {
    let result = super.call("auctionImpl", "auctionImpl():(address)", []);

    return result[0].toAddress();
  }

  try_auctionImpl(): ethereum.CallResult<Address> {
    let result = super.tryCall("auctionImpl", "auctionImpl():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  deploy(
    _founderParams: Array<ManagerImpl__deployInput_founderParamsStruct>,
    _tokenParams: ManagerImpl__deployInput_tokenParamsStruct,
    _auctionParams: ManagerImpl__deployInput_auctionParamsStruct,
    _govParams: ManagerImpl__deployInput_govParamsStruct
  ): ManagerImpl__deployResult {
    let result = super.call(
      "deploy",
      "deploy((address,uint256,uint256)[],(bytes),(uint256,uint256),(uint256,uint256,uint256,uint256,uint256,address)):(address,address,address,address,address)",
      [
        ethereum.Value.fromTupleArray(_founderParams),
        ethereum.Value.fromTuple(_tokenParams),
        ethereum.Value.fromTuple(_auctionParams),
        ethereum.Value.fromTuple(_govParams)
      ]
    );

    return new ManagerImpl__deployResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toAddress(),
      result[4].toAddress()
    );
  }

  try_deploy(
    _founderParams: Array<ManagerImpl__deployInput_founderParamsStruct>,
    _tokenParams: ManagerImpl__deployInput_tokenParamsStruct,
    _auctionParams: ManagerImpl__deployInput_auctionParamsStruct,
    _govParams: ManagerImpl__deployInput_govParamsStruct
  ): ethereum.CallResult<ManagerImpl__deployResult> {
    let result = super.tryCall(
      "deploy",
      "deploy((address,uint256,uint256)[],(bytes),(uint256,uint256),(uint256,uint256,uint256,uint256,uint256,address)):(address,address,address,address,address)",
      [
        ethereum.Value.fromTupleArray(_founderParams),
        ethereum.Value.fromTuple(_tokenParams),
        ethereum.Value.fromTuple(_auctionParams),
        ethereum.Value.fromTuple(_govParams)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ManagerImpl__deployResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toAddress(),
        value[4].toAddress()
      )
    );
  }

  getAddresses(_token: Address): ManagerImpl__getAddressesResult {
    let result = super.call(
      "getAddresses",
      "getAddresses(address):(address,address,address,address)",
      [ethereum.Value.fromAddress(_token)]
    );

    return new ManagerImpl__getAddressesResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toAddress()
    );
  }

  try_getAddresses(
    _token: Address
  ): ethereum.CallResult<ManagerImpl__getAddressesResult> {
    let result = super.tryCall(
      "getAddresses",
      "getAddresses(address):(address,address,address,address)",
      [ethereum.Value.fromAddress(_token)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ManagerImpl__getAddressesResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toAddress()
      )
    );
  }

  governorImpl(): Address {
    let result = super.call("governorImpl", "governorImpl():(address)", []);

    return result[0].toAddress();
  }

  try_governorImpl(): ethereum.CallResult<Address> {
    let result = super.tryCall("governorImpl", "governorImpl():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isRegisteredUpgrade(_baseImpl: Address, _upgradeImpl: Address): boolean {
    let result = super.call(
      "isRegisteredUpgrade",
      "isRegisteredUpgrade(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_baseImpl),
        ethereum.Value.fromAddress(_upgradeImpl)
      ]
    );

    return result[0].toBoolean();
  }

  try_isRegisteredUpgrade(
    _baseImpl: Address,
    _upgradeImpl: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isRegisteredUpgrade",
      "isRegisteredUpgrade(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_baseImpl),
        ethereum.Value.fromAddress(_upgradeImpl)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  metadataImpl(): Address {
    let result = super.call("metadataImpl", "metadataImpl():(address)", []);

    return result[0].toAddress();
  }

  try_metadataImpl(): ethereum.CallResult<Address> {
    let result = super.tryCall("metadataImpl", "metadataImpl():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingOwner(): Address {
    let result = super.call("pendingOwner", "pendingOwner():(address)", []);

    return result[0].toAddress();
  }

  try_pendingOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("pendingOwner", "pendingOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  tokenImpl(): Address {
    let result = super.call("tokenImpl", "tokenImpl():(address)", []);

    return result[0].toAddress();
  }

  try_tokenImpl(): ethereum.CallResult<Address> {
    let result = super.tryCall("tokenImpl", "tokenImpl():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  treasuryImpl(): Address {
    let result = super.call("treasuryImpl", "treasuryImpl():(address)", []);

    return result[0].toAddress();
  }

  try_treasuryImpl(): ethereum.CallResult<Address> {
    let result = super.tryCall("treasuryImpl", "treasuryImpl():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _tokenImpl(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _metadataImpl(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _auctionImpl(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _treasuryImpl(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _governorImpl(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class CancelOwnershipTransferCall extends ethereum.Call {
  get inputs(): CancelOwnershipTransferCall__Inputs {
    return new CancelOwnershipTransferCall__Inputs(this);
  }

  get outputs(): CancelOwnershipTransferCall__Outputs {
    return new CancelOwnershipTransferCall__Outputs(this);
  }
}

export class CancelOwnershipTransferCall__Inputs {
  _call: CancelOwnershipTransferCall;

  constructor(call: CancelOwnershipTransferCall) {
    this._call = call;
  }
}

export class CancelOwnershipTransferCall__Outputs {
  _call: CancelOwnershipTransferCall;

  constructor(call: CancelOwnershipTransferCall) {
    this._call = call;
  }
}

export class DeployCall extends ethereum.Call {
  get inputs(): DeployCall__Inputs {
    return new DeployCall__Inputs(this);
  }

  get outputs(): DeployCall__Outputs {
    return new DeployCall__Outputs(this);
  }
}

export class DeployCall__Inputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }

  get _founderParams(): Array<DeployCall_founderParamsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      DeployCall_founderParamsStruct
    >();
  }

  get _tokenParams(): DeployCall_tokenParamsStruct {
    return changetype<DeployCall_tokenParamsStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get _auctionParams(): DeployCall_auctionParamsStruct {
    return changetype<DeployCall_auctionParamsStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }

  get _govParams(): DeployCall_govParamsStruct {
    return changetype<DeployCall_govParamsStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }
}

export class DeployCall__Outputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get metadata(): Address {
    return this._call.outputValues[1].value.toAddress();
  }

  get auction(): Address {
    return this._call.outputValues[2].value.toAddress();
  }

  get treasury(): Address {
    return this._call.outputValues[3].value.toAddress();
  }

  get governor(): Address {
    return this._call.outputValues[4].value.toAddress();
  }
}

export class DeployCall_founderParamsStruct extends ethereum.Tuple {
  get wallet(): Address {
    return this[0].toAddress();
  }

  get ownershipPct(): BigInt {
    return this[1].toBigInt();
  }

  get vestExpiry(): BigInt {
    return this[2].toBigInt();
  }
}

export class DeployCall_tokenParamsStruct extends ethereum.Tuple {
  get initStrings(): Bytes {
    return this[0].toBytes();
  }
}

export class DeployCall_auctionParamsStruct extends ethereum.Tuple {
  get reservePrice(): BigInt {
    return this[0].toBigInt();
  }

  get duration(): BigInt {
    return this[1].toBigInt();
  }
}

export class DeployCall_govParamsStruct extends ethereum.Tuple {
  get timelockDelay(): BigInt {
    return this[0].toBigInt();
  }

  get votingDelay(): BigInt {
    return this[1].toBigInt();
  }

  get votingPeriod(): BigInt {
    return this[2].toBigInt();
  }

  get proposalThresholdBps(): BigInt {
    return this[3].toBigInt();
  }

  get quorumThresholdBps(): BigInt {
    return this[4].toBigInt();
  }

  get vetoer(): Address {
    return this[5].toAddress();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RegisterUpgradeCall extends ethereum.Call {
  get inputs(): RegisterUpgradeCall__Inputs {
    return new RegisterUpgradeCall__Inputs(this);
  }

  get outputs(): RegisterUpgradeCall__Outputs {
    return new RegisterUpgradeCall__Outputs(this);
  }
}

export class RegisterUpgradeCall__Inputs {
  _call: RegisterUpgradeCall;

  constructor(call: RegisterUpgradeCall) {
    this._call = call;
  }

  get _baseImpl(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _upgradeImpl(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RegisterUpgradeCall__Outputs {
  _call: RegisterUpgradeCall;

  constructor(call: RegisterUpgradeCall) {
    this._call = call;
  }
}

export class RemoveUpgradeCall extends ethereum.Call {
  get inputs(): RemoveUpgradeCall__Inputs {
    return new RemoveUpgradeCall__Inputs(this);
  }

  get outputs(): RemoveUpgradeCall__Outputs {
    return new RemoveUpgradeCall__Outputs(this);
  }
}

export class RemoveUpgradeCall__Inputs {
  _call: RemoveUpgradeCall;

  constructor(call: RemoveUpgradeCall) {
    this._call = call;
  }

  get _baseImpl(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _upgradeImpl(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveUpgradeCall__Outputs {
  _call: RemoveUpgradeCall;

  constructor(call: RemoveUpgradeCall) {
    this._call = call;
  }
}

export class SafeTransferOwnershipCall extends ethereum.Call {
  get inputs(): SafeTransferOwnershipCall__Inputs {
    return new SafeTransferOwnershipCall__Inputs(this);
  }

  get outputs(): SafeTransferOwnershipCall__Outputs {
    return new SafeTransferOwnershipCall__Outputs(this);
  }
}

export class SafeTransferOwnershipCall__Inputs {
  _call: SafeTransferOwnershipCall;

  constructor(call: SafeTransferOwnershipCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SafeTransferOwnershipCall__Outputs {
  _call: SafeTransferOwnershipCall;

  constructor(call: SafeTransferOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get _newImpl(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get _newImpl(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
