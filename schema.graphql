enum ProposalStatus {
  PENDING
  ACTIVE
  CANCELLED
  VETOED
  QUEUED
  EXECUTED
}

enum VoteType {
  FOR
  AGAINST
  ABSTAIN
}

enum TreasuryTxStatus {
  SCHEDULED
  CANCELLED
  EXECUTED
}

type DAO @entity {
  id: ID! # tokenContractAddress
  creationTxHash: Bytes!
  owner: String!

  # token Info
  tokenContract: TokenContract! @derivedFrom(field: "DAO")
  # tokenAddress: Bytes!

  # auction Info
  auctionContract: AuctionContract! @derivedFrom(field: "DAO")
  # auctionAddress: Bytes!

  # metadata Info
  metadataContract: MetadataContract! @derivedFrom(field: "DAO")
  # metadataAddress: Bytes!

  # governor Info
  governorContract: GovernorContract! @derivedFrom(field: "DAO")
  # governorAddress: Bytes!

  # treasury Info
  treasuryContract: TreasuryContract! @derivedFrom(field: "DAO")
  # treasuryAddress: Bytes!
}

type FounderInfo @entity {
  id: ID!
  ownershipPercentage: BigInt!
  vestExpiry: BigInt!

  tokenContract: TokenContract!
  account: Account!
}

type TokenContract @entity {
  id: ID! # address
  name: String!
  symbol: String!
  totalSupply: BigInt!
  contractURI: String!
  owner: String!

  DAO: DAO!
  auctionContract: AuctionContract!
  founders: [FounderInfo!]! @derivedFrom(field: "tokenContract")
  tokens: [Token!]! @derivedFrom(field: "tokenContract")
}

type MetadataContract @entity {
  id: ID! # address
  websiteURL: String! # projectURI
  description: String!
  contractImage: String!
  rendererBase: String!
  owner: String!

  properties: [Property!]! @derivedFrom(field: "metadataContract")
  DAO: DAO!
}

type AuctionContract @entity {
  id: ID! # address
  duration: BigInt!
  reservePrice: BigInt!
  timeBuffer: BigInt!
  minBidIncrement: BigInt!
  paused: Boolean!
  owner: String!

  DAO: DAO!
  tokenContract: TokenContract!
  auctions: [Auction!]! @derivedFrom(field: "auctionContract") # daily (or other interval) auctions
}

type TreasuryContract @entity {
  id: ID! # address
  delay: BigInt!
  gracePeriod: BigInt!
  owner: String!

  DAO: DAO!
  transactions: [TreasuryTransaction!]! @derivedFrom(field: "treasuryContract")
}

type GovernorContract @entity {
  id: ID! # address
  vetoEnabled: Boolean!
  vetoerAddress: Bytes!
  proposalThreshold: BigInt! # bps
  quoromThreshold: BigInt! # bps
  votingDelay: BigInt!
  votingPeriod: BigInt!
  owner: String!

  proposals: [Proposal!]! @derivedFrom(field: "governorContract")
  DAO: DAO!
}

type Token @entity {
  id: ID! # tokenAddress + tokenId
  tokenId: BigInt!
  tokenURI: String!

  tokenContract: TokenContract!
  auction: Auction!
  owner: Account!
}

type Auction @entity {
  id: ID! # address + tokenId
  settled: Boolean!
  startTime: BigInt! # uint256
  endTime: BigInt! # uint256
  winner: Account # address
  winningBid: AuctionBid

  auctionContract: AuctionContract!
  token: Token @derivedFrom(field: "auction")
  bids: [AuctionBid!]! @derivedFrom(field: "auction")
}

type AuctionBid @entity(immutable: true) {
  id: ID! # txHash
  amount: BigInt! # uint256
  extended: Boolean! # bool
  blockTimestamp: BigInt!

  auction: Auction!
  bidder: Account!
}

type Delegation @entity {
  id: ID! # account address + dao address
  DAO: DAO!
  voter: Account!
  delegatedTo: Account!
}

type Property @entity {
  id: ID! # metadataAddr + propertyId
  name: String!
  metadataContract: MetadataContract!
}

type Proposal @entity {
  id: ID! # proposalId
  title: String!
  description: String!
  descriptionHash: Bytes!
  status: ProposalStatus!
  targets: [String!]!
  values: [BigInt!]!
  calldatas: [Bytes!]!
  blockTimestamp: BigInt!
  creationTxHash: Bytes!

  forVotes: BigInt!
  againstVotes: BigInt!
  abstainVotes: BigInt!

  governorContract: GovernorContract!
  submitter: Account!
  votes: [Vote!]! @derivedFrom(field: "proposal")
}

type Vote @entity {
  id: ID! # txHash
  supported: VoteType!
  reason: String!
  weight: BigInt!
  blockTimestamp: BigInt!

  proposal: Proposal!
  voter: Account!
  # delegate: Account
}

type TreasuryTransaction @entity {
  id: ID! # txHash
  status: TreasuryTxStatus!
  etaTimestamp: BigInt!
  creationTxHash: Bytes!

  executedTimestamp: BigInt
  executedHash: Bytes

  treasuryContract: TreasuryContract!
  proposal: Proposal!
}

type Account @entity {
  id: ID! # address
  bids: [AuctionBid!]! @derivedFrom(field: "bidder")
  tokens: [Token!]! @derivedFrom(field: "owner")
  votes: [Vote!]! @derivedFrom(field: "voter")
  submittedProposals: [Proposal!]! @derivedFrom(field: "submitter")

  delegations: [Delegation!]! @derivedFrom(field: "voter")
  delegatedBy: [Delegation!]! @derivedFrom(field: "delegatedTo")
}
